'''
Găsește ultimul număr prim mai mic decât un număr dat, dar doar pentru n mai mare strict decat 2
'''
def get_largest_prime_below(n):
    ok=1
    while ok>0:
        n-=1
        nr=0
        for i in range(1,n+1):
            if n%i==0:nr+=1
        if nr==2:ok=0
    return n
def test_get_largest_prime_below():
    assert get_largest_prime_below(10)==7
    assert get_largest_prime_below(105)==103

'''
verificare daca n este palindrom
'''
def is_palindrome(n):
    og=0
    a=n
    while a!=0:
        og=og*10+a%10
        a=a//10
    if(og==n): return True
    else: return False

def test_is_palindrome():
    assert is_palindrome(101)==True
    assert is_palindrome(100)==False
    assert is_palindrome(19)==False

'''
Afișează toți anii bisecți între doi ani dați (inclusiv anii dați).
'''
def get_leap_years(an1,an2):
    for i in range(an1+1,an2):
        if i%4==0: print(i)
def test_get_leap_years():
    assert get_leap_years(2000,2008)==2004
def main():

    test_get_leap_years()
if __name__ == '__main__':
    main()